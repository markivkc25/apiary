swagger: "2.0"
info:
  version: 1.0.0
  title: "CustomerMasterDataManagement"
  description: This API returns the customer information based on customer id
  termsOfService: http://swagger.io/terms/
  contact:
    name: EAS IPM Oracle API Team
    email: vikram.kc@cognizant.com
    url: http://www.cognizant.com/eas/ipm/oracle
host: cognizant-eas-ipm-oracle.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /customers:
    get:
      description: |
        Returns all Customers in the Company
      operationId: findCustomers
      parameters:
        - name: department
          in: query
          description: returns the customer based on the department
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new customer in the enterprise.  Duplicates are allowed
      operationId: addNewCustomer
      parameters:
        - name: customer
          in: body
          description: Customer to add to the enterprise
          required: true
          schema:
            $ref: '#/definitions/NewCustomer'
      responses:
        200:
          description: customer created response
          schema:
            $ref: '#/definitions/Customer'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /customers/{id}:
    get:
      description: Returns a customer based on a employee Id.
      operationId: find pet by customer employee id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: customer retrieval response
          schema:
            $ref: '#/definitions/Customer'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Deletes a single customer based on the employye ID supplied
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Customer:
    allOf:
      - $ref: '#/definitions/NewCustomer'
    required:
      - employeeid
    properties:
      employeeid:
        type: integer
        format: int64
  NewCustomer:
    required:
      - name
    properties:
      name:
        type: string
      department:
        type: string
      emailid:
        type: string
        format: email
      phone:
        type: integer
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string